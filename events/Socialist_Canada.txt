###########################
# Socialist Canada Events
###########################

add_namespace = canada_soc

#Congress Opens

country_event = {
	id = canada_soc.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.1" }
	title = canada_soc.1.t
	desc = canada_soc.1.d
	picture = GFX_report_event_communists_cheer

	trigger = {
		has_socialist_government = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = canada_soc.1.a
		add_political_power = 50
		clr_country_flag = CAN_CCF_Victory
		clr_country_flag = CAN_RadSoc_CPC_Victory
		clr_country_flag = CAN_SDP_Victory
		clr_country_flag = CAN_SPC_Victory
		clr_country_flag = CAN_OBU_Victory
		clr_country_flag = CAN_TLC_Victory
		clr_country_flag = CAN_WUL_Victory
		clr_country_flag = CAN_Synd_CPC_Victory
		clr_country_flag = CAN_CPC_Victory
		clr_country_flag = CAN_CUM_Victory
		clr_country_flag = CAN_MEL_Victory
		mark_focus_tree_layout_dirty = yes
		set_variable = { CAN_congress_ccf = 0 }
		set_variable = { CAN_congress_radsoc = 0 }
		set_variable = { CAN_congress_synd = 0 }
		set_variable = { CAN_congress_tot = 0 }
		hidden_effect = {
			country_event = {
				id = canada_soc.2
				days = 5
			}
			country_event = {
				id = canada_soc.3
				days = 10
			}
			country_event = {
				id = canada_soc.4
				days = 15
			}
			country_event = {
				id = canada_soc.5
				days = 20
			}
			country_event = {
				id = canada_soc.6
				days = 25
			}
			country_event = {
				id = canada_soc.7
				days = 30
			}
			country_event = {
				id = canada_soc.8
				days = 30
			}
			country_event = {
				id = canada_soc.9
				days = 30
			}
			country_event = {
				id = canada_soc.10
				days = 30
			}
			country_event = {
				id = canada_soc.11
				days = 34
			}
		}
	}
}

#Fate of the FPU

country_event = {
	id = canada_soc.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.2" }
	title = canada_soc.2.t
	desc = canada_soc.2.d
	picture = GFX_report_event_communists_cheer

	trigger = {
		has_socialist_government = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = canada_soc.2.b
		ai_chance = {
			factor = 20
		}
		add_political_power = -30
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.03
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.03
		}
		set_country_flag = SCC_fpu_ran
	}
	
	option = {
		name = canada_soc.2.a
		ai_chance = {
			factor = 80
		}
		add_political_power = 40
		add_popularity = {
			ideology = syndicalist
			popularity = 0.03
		}
		set_party_name = {
			long_name = SCC_syndicalist_party2_long
			name = SCC_syndicalist_party2
			ideology = syndicalist
		}
		
		create_country_leader = {
			name = "Congress of Canadian Socialists"
			picture = "gfx/leaders/CAN/Portrait_Canada_Vacant_Office_2.png"
			expire = "1.1.1"
			ideology = liberalized_syndicalism_subtype
		}
	}
}

#Tory Policy

country_event = {
	id = canada_soc.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.3" }
	title = canada_soc.3.t
	desc = canada_soc.3.d
	picture = GFX_report_event_communists_cheer

	trigger = {
		has_socialist_government = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = canada_soc.3.a
		ai_chance = {
			factor = 25
		}
		add_to_variable = {
			var = CAN_congress_tot
			value = 1
		}
		add_political_power = 20
		add_manpower = -200
		set_party_name = {
			long_name = SCC_social_conservative_party3_long
			name = SCC_social_conservative_party3
			ideology = social_conservative
		}
		add_popularity = {
			ideology = social_conservative
			popularity = -0.1
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = -0.1
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.3.b
		ai_chance = {
			factor = 40
		}
		add_to_variable = {
			var = CAN_congress_synd
			value = 1
		}
		add_popularity = {
			ideology = social_conservative
			popularity = -0.05
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = -0.05
		}
		add_political_power = 10
		set_party_name = {
			long_name = SCC_social_conservative_party3_long
			name = SCC_social_conservative_party3
			ideology = social_conservative
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.3.c
		ai_chance = {
			factor = 35
		}
		add_to_variable = {
			var = CAN_congress_radsoc
			value = 1
		}
		set_party_name = {
			long_name = SCC_social_conservative_party2_long
			name = SCC_social_conservative_party2
			ideology = social_conservative
		}
		add_political_power = 10
		add_stability = -0.05
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
		set_country_flag = CAN_light_tory_policy
	}
	option = {
		name = canada_soc.3.e
		ai_chance = {
			factor = 35
		}
		add_to_variable = {
			var = CAN_congress_ccf
			value = 1
		}
		add_stability = 0.05
		add_political_power = -20
		add_popularity = {
			ideology = social_democrat
			popularity = 0.05
		}
		set_country_flag = CAN_light_tory_policy
	}
}

#Liberal Policy

country_event = {
	id = canada_soc.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.4" }
	title = canada_soc.4.t
	desc = canada_soc.4.d
	picture = GFX_report_event_communists_cheer

	trigger = {
		has_socialist_government = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = canada_soc.4.a
		ai_chance = {
			factor = 25
		}
		add_to_variable = {
			var = CAN_congress_tot
			value = 1
		}
		add_political_power = 20
		add_manpower = -200
		set_party_name = {
			long_name = SCC_social_liberal_party2_long
			name = SCC_social_liberal_party2
			ideology = social_liberal
		}
		set_party_name = {
			long_name = SCC_social_liberal_party2_long
			name = SCC_social_liberal_party2
			ideology = market_liberal
		}
		add_popularity = {
			ideology = market_liberal
			popularity = -0.1
		}
		add_popularity = {
			ideology = social_liberal
			popularity = -0.1
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.4.b
		ai_chance = {
			factor = 40
		}
		add_to_variable = {
			var = CAN_congress_synd
			value = 1
		}
		add_popularity = {
			ideology = market_liberal
			popularity = -0.05
		}
		add_popularity = {
			ideology = social_liberal
			popularity = -0.05
		}
		add_political_power = 10
		set_party_name = {
			long_name = SCC_social_liberal_party2_long
			name = SCC_social_liberal_party2
			ideology = social_liberal
		}
		set_party_name = {
			long_name = SCC_social_liberal_party2_long
			name = SCC_social_liberal_party2
			ideology = market_liberal
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.4.c
		ai_chance = {
			factor = 35
		}
		add_to_variable = {
			var = CAN_congress_radsoc
			value = 1
		}
		set_party_name = {
			long_name = SCC_market_liberal_party2_long
			name = SCC_market_liberal_party2
			ideology = market_liberal
		}
		set_party_name = {
			long_name = SCC_market_liberal_party2_long
			name = SCC_market_liberal_party2
			ideology = social_liberal
		}
		add_political_power = 10
		add_stability = -0.05
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
		set_country_flag = CAN_light_liberal_policy
	}
	option = {
		name = canada_soc.4.e
		ai_chance = {
			factor = 35
		}
		add_to_variable = {
			var = CAN_congress_ccf
			value = 1
		}
		add_stability = 0.05
		add_political_power = -20
		add_popularity = {
			ideology = social_democrat
			popularity = 0.05
		}
		set_country_flag = CAN_light_liberal_policy
	}
}

# Economic Policy
country_event = {
	id = canada_soc.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.5" }
	title = canada_soc.5.t
	desc = canada_soc.5.d
	picture = GFX_report_event_communists_cheer

	trigger = {
		has_socialist_government = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = canada_soc.5.a
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_economy_tot
		add_to_variable = {
			var = CAN_congress_tot
			value = 1
		}
		random_owned_state = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.5.b
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_economy_syn
		add_to_variable = {
			var = CAN_congress_tot
			value = 1
		}
		random_owned_state = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.5.c
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_economy_radsoc
		add_to_variable = {
			var = CAN_congress_radsoc
			value = 1
		}
		random_owned_state = {
			add_building_construction = {
				type = infrastructure
				level = 1
				instant_build = yes
			}
		}

		random_owned_state = {
			add_building_construction = {
				type = infrastructure
				level = 1
				instant_build = yes
			}
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.5.e
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_economy_ccf
		add_to_variable = {
			var = CAN_congress_ccf
			value = 1
		}
		random_owned_state = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		add_stability = 0.06
		add_popularity = {
			ideology = social_democrat
			popularity = 0.05
		}
	}
}

# Exile Policy

country_event = {
	id = canada_soc.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.6" }
	title = canada_soc.6.t
	desc = canada_soc.6.d
	picture = GFX_report_event_communists_cheer

	trigger = {
		has_socialist_government = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = canada_soc.6.a
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_exile_tot
		add_to_variable = {
			var = CAN_congress_tot
			value = 1
		}
		add_manpower = -6500
		add_stability = -0.05
		add_popularity = {
			ideology = totalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.6.b
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_exile_syn
		add_to_variable = {
			var = CAN_congress_synd
			value = 1
		}
		random_owned_state = {
			increase_state_category_by_one_level = yes
		}
		random_owned_state = {
			increase_state_category_by_one_level = yes
		}
		add_offsite_building = { type = industrial_complex level = 1 }
		add_offsite_building = { type = industrial_complex level = 1 }
		add_manpower = -2200
		add_political_power = -25
		add_popularity = {
			ideology = syndicalist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.6.c
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_exile_radsoc
		add_to_variable = {
			var = CAN_congress_radsoc
			value = 1
		}
		random_owned_state = {
			increase_state_category_by_one_level = yes
		}
		add_offsite_building = { type = industrial_complex level = 1 }
		add_manpower = -1100
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
	}
	option = {
		name = canada_soc.6.e
		ai_chance = {
			factor = 25
		}
		set_country_flag = CAN_congress_exile_ccf
		add_to_variable = {
			var = CAN_congress_ccf
			value = 1
		}
		random_owned_state = {
			increase_state_category_by_one_level = yes
		}
		add_offsite_building = { type = industrial_complex level = 1 }
		add_political_power = -50
		add_popularity = {
			ideology = social_democrat
			popularity = 0.05
		}
	}
}

# Totalist Victory

country_event = {
	id = canada_soc.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.7" }
	title = canada_soc.7.t
	desc = canada_soc.7.d
	picture = GFX_report_event_election_vote

	trigger = {
		#tag = CAN
		has_socialist_government = yes
		check_variable = {
			var = CAN_congress_tot
			value > 2
		}
	}
	
	immediate = {
		hidden_effect = {
			country_event = {
				id = canada_soc.14
				days = 10
			}
			country_event = {
				id = canada_soc.15
				days = 15
			}
		}
		set_country_flag = CAN_congress_over
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Chuck Crate
		name = canada_soc.7.c
		remove_all_ministers = yes
		set_country_flag = CAN_CUM_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Tim_Buck_hog_tot
			CAN_Alexander_Albert_MacLeod_for_tot
			CAN_James_Litterick_eco_tot
			CAN_Tom_McEwan_sec_tot
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Chuck Crate"
			picture = "gfx/leaders/CAN/Portrait_Canada_Chuck_Crate.png"
			expire = "1.1.1"
			ideology = tot_reformed_natsynd_subtype
		}
		set_party_name = {
			name = SCC_maximist_party
			long_name = SCC_maximist_party_long
			ideology = totalist
		}
	}
	
	option = { #William Moriarty
		name = canada_soc.7.b
		remove_all_ministers = yes
		set_country_flag = CAN_MEL_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Tim_Buck_hog_tot
			CAN_Alexander_Albert_MacLeod_for_tot
			CAN_James_Litterick_eco_tot
			CAN_Tom_McEwan_sec_tot
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "William Moriarty"
			picture = "gfx/leaders/CAN/Portrait_Canada_William_Moriarty.png"
			expire = "1.1.1"
			ideology = lovestoneism_subtype
		}
		set_party_name = {
			name = SCC_lovestone_party
			long_name = SCC_lovestone_party_long
			ideology = totalist
		}
	}
	
	option = { # Tim Buck
		name = canada_soc.7.a
		remove_all_ministers = yes
		set_country_flag = CAN_CPC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Tim_Buck_hog_tot
			CAN_Alexander_Albert_MacLeod_for_tot
			CAN_James_Litterick_eco_tot
			CAN_Tom_McEwan_sec_tot
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Tim Buck"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tim_Buck_kr.png"
			expire = "1.1.1"
			ideology = popcom_subtype
		}
		set_party_name = {
			name = SCC_buck_party
			long_name = SCC_buck_party_long
			ideology = totalist
		}
	}
}

# IWL Victory

country_event = {
	id = canada_soc.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.8" }
	title = canada_soc.8.t
	desc = {
		text = canada_soc.8.d
		trigger = {
			NOT = { has_country_flag = SCC_fpu_ran }
		}
	}
	desc = {
		text = canada_soc.8.d_fpu
		trigger = {
			has_country_flag = SCC_fpu_ran 
		}
	}
	picture = GFX_report_event_election_vote

	trigger = {
		#tag = CAN
		has_socialist_government = yes
		check_variable = {
			var = CAN_congress_synd
			value > 2
		}
	}
	
	immediate = {
		hidden_effect = {
			country_event = {
				id = canada_soc.12
				days = 10
			}
			country_event = {
				id = canada_soc.15
				days = 15
			}
		}
		set_country_flag = CAN_congress_over
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Roger Ernest Bray
		name = canada_soc.8.a
		remove_all_ministers = yes
		set_country_flag = CAN_OBU_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Roger Ernest Bray"
			picture = "gfx/leaders/CAN/Portrait_Canada_Roger_Ernest_Bray.png"
			expire = "1.1.1"
			ideology = centralized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_one_big_union_party
			long_name = SCC_one_big_union_party_long
			ideology = syndicalist
		}
	}
	
	option = { #Robert B. Russell
		name = canada_soc.8.b
		remove_all_ministers = yes
		set_country_flag = CAN_OBU_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Robert B. Russell"
			picture = "gfx/leaders/CAN/Portrait_Canada_Robert_B_Russell.png"
			expire = "1.1.1"
			ideology = centralized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_one_big_union_party
			long_name = SCC_one_big_union_party_long
			ideology = syndicalist
		}
	}
	
	option = { #Tom Moore
		name = canada_soc.8.c
		remove_all_ministers = yes
		set_country_flag = CAN_TLC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Tom Moore"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tom_Moore.png"
			expire = "1.1.1"
			ideology = democratic_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_trades_and_labour_congress_party
			long_name = SCC_trades_and_labour_congress_party_long
			ideology = syndicalist
		}
	}
	
	option = { #Arthur Herbert 'Slim' Evans
		name = canada_soc.8.e
		remove_all_ministers = yes
		set_country_flag = CAN_WUL_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Arthur Herbert Evans"
			picture = "gfx/leaders/CAN/Portrait_Canada_Arthur_Herbert_Evans.png"
			expire = "1.1.1"
			ideology = liberalized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_workers_unity_party
			long_name = SCC_workers_unity_party_long
			ideology = syndicalist
		}
	}
	
	option = { #K.M. Brown
		name = canada_soc.8.f
		trigger = {
			has_country_flag = SCC_fpu_ran
		}
		remove_all_ministers = yes
		set_country_flag = CAN_FPU_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Kenneth McKenzie Brown"
			picture = "gfx/leaders/NFL/Portrait_Newfoundland_Kenneth_McKenzie_Brown.png"
			expire = "1.1.1"
			ideology = liberalized_syndicalism_subtype
		}
		set_party_name = {
			name = NFL_syndicalist_party
			long_name = NFL_syndicalist_party_long
			ideology = syndicalist
		}
	}
	
	option = { #Joey Smallwood
		name = canada_soc.8.g
		trigger = {
			has_country_flag = SCC_fpu_ran
		}
		remove_all_ministers = yes
		set_country_flag = CAN_FPU_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Joey Smallwood"
			picture = "gfx/leaders/NFL/Portrait_Newfoundland_Joey_Smallwood.png"
			expire = "1.1.1"
			ideology = liberalized_syndicalism_subtype
		}
		set_party_name = {
			name = NFL_syndicalist_party
			long_name = NFL_syndicalist_party_long
			ideology = syndicalist
		}
	}
}

# RadSoc Victory

country_event = {
	id = canada_soc.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.9" }
	title = canada_soc.9.t
	desc = canada_soc.9.d
	picture = GFX_report_event_election_vote

	trigger = {
		#tag = CAN
		has_socialist_government = yes
		check_variable = {
			var = CAN_congress_radsoc
			value > 2
		}
	}
	
	immediate = {
		hidden_effect = {
			country_event = {
				id = canada_soc.12
				days = 10
			}
			country_event = {
				id = canada_soc.14
				days = 15
			}
		}
		set_country_flag = CAN_congress_over
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Richard Parmater Pettipiece
		name = canada_soc.9.a
		remove_all_ministers = yes
		set_country_flag = CAN_SPC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Claude_Jodoin_hog_rso
			CAN_Humphrey_Mitchell_for_rso
			CAN_William_Charles_Good_eco_rso
			CAN_Joseph_Andrew_Clarke_sec_rso
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Richard Parmater Pettipiece"
			picture = "gfx/leaders/CAN/Portrait_Canada_Richard_Pettipiece.png"
			expire = "1.1.1"
			ideology = radical_socialist_subtype
		}
		set_party_name = {
			name = SCC_socialist_party_of_canada_party
			long_name = SCC_socialist_party_of_canada_party_long
			ideology = radical_socialist
		}
	}
	
	option = { #Jacob Penner
		name = canada_soc.9.b
		remove_all_ministers = yes
		set_country_flag = CAN_SDP_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Claude_Jodoin_hog_rso
			CAN_Humphrey_Mitchell_for_rso
			CAN_William_Charles_Good_eco_rso
			CAN_Joseph_Andrew_Clarke_sec_rso
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Jacob Penner"
			picture = "gfx/leaders/CAN/Portrait_Canada_Jacob_Penner.png"
			expire = "1.1.1"
			ideology = radsoc_revisionist_marxism_subtype
		}
		set_party_name = {
			name = SCC_social_democratic_party_of_canada_party
			long_name = SCC_social_democratic_party_of_canada_party_long
			ideology = radical_socialist
		}
	}
	
	option = { #Bill Kardash
		name = canada_soc.9.c
		remove_all_ministers = yes
		set_country_flag = CAN_RadSoc_CPC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Claude_Jodoin_hog_rso
			CAN_Humphrey_Mitchell_for_rso
			CAN_William_Charles_Good_eco_rso
			CAN_Joseph_Andrew_Clarke_sec_rso
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Bill Kardash"
			picture = "gfx/leaders/CAN/Portrait_Canada_Bill_Kardash.png"
			expire = "1.1.1"
			ideology = radsoc_communism_subtype
		}
		set_party_name = {
			name = SCC_radsoc_communist_party
			long_name = SCC_radsoc_communist_party_long
			ideology = radical_socialist
		}
	}
	
	option = { #James Litterick
		name = canada_soc.9.e
		remove_all_ministers = yes
		set_country_flag = CAN_RadSoc_CPC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Claude_Jodoin_hog_rso
			CAN_Humphrey_Mitchell_for_rso
			CAN_William_Charles_Good_eco_rso
			CAN_Joseph_Andrew_Clarke_sec_rso
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		create_country_leader = {
			name = "James Litterick"
			picture = "gfx/leaders/CAN/Portrait_Canada_James_Litterick.png"
			expire = "1.1.1"
			ideology = radsoc_communism_subtype
		}
		set_party_name = {
			name = SCC_radsoc_communist_party
			long_name = SCC_radsoc_communist_party_long
			ideology = radical_socialist
		}
	}
}

# Labour Victory

country_event = {
	id = canada_soc.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.10" }
	title = canada_soc.10.t
	desc = canada_soc.10.d
	picture = GFX_report_event_election_vote

	trigger = {
		#tag = CAN
		has_socialist_government = yes
		check_variable = {
			var = CAN_congress_ccf
			value > 2
		}
	}
	
	immediate = {
		hidden_effect = {
			country_event = {
				id = canada_soc.12
				days = 10
			}
			country_event = {
				id = canada_soc.14
				days = 15
			}
			country_event = {
				id = canada_soc.15
				days = 20
			}
		}
		set_country_flag = CAN_congress_over
		set_country_flag = CAN_CCF_Victory
		mark_focus_tree_layout_dirty = yes
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = { #J.S. Woodsworth
		name = canada_soc.10.a
		trigger = {
			date > 1942.3.21
		}
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		
	}
	
	option = { #Major James Coldwell
		name = canada_soc.10.b
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "Major James Coldwell"
			picture = "gfx/leaders/CAN/Portrait_Canada_Major_James_Coldwell.png"
			expire = "1.1.1"
			ideology = socdem_democratic_socialism_subtype
		}
	}
	
	option = { #Tommy Douglas
		name = canada_soc.10.c
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "Tommy Douglas"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tommy_Douglas.png"
			expire = "1.1.1"
			ideology = socdem_democratic_socialism_subtype
		}
	}
	
	option = { #William Irvine
		name = canada_soc.10.e
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "William Irvine"
			picture = "gfx/leaders/CAN/Portrait_Canada_William_Irvine.png"
			expire = "1.1.1"
			ideology = socdem_christian_socialism_subtype
		}
	}
	
	option = { #William Irvine
		name = canada_soc.10.f
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "Clarence Gillis"
			picture = "gfx/leaders/CAN/Portrait_Canada_Clarence_Gillis.png"
			expire = "1.1.1"
			ideology = socdem_democratic_socialism_subtype
		}
	}
}

# Draw

country_event = {
	id = canada_soc.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.11" }
	title = canada_soc.11.t
	desc = canada_soc.11.d
	picture = GFX_report_event_election_vote

	trigger = {
		#tag = CAN
		has_socialist_government = yes
		NOT = {
			has_country_flag = CAN_CPC_Victory
			has_country_flag = CAN_CUM_Victory
			has_country_flag = CAN_MEL_Victory
			has_country_flag = CAN_WUL_Victory
			has_country_flag = CAN_OBU_Victory
			has_country_flag = CAN_TLC_Victory
			has_country_flag = CAN_SPC_Victory
			has_country_flag = CAN_SDP_Victory
			has_country_flag = CAN_RadSoc_CPC_Victory
			has_country_flag = CAN_CCF_Victory
		}
		OR = {
			AND = {
				check_variable = {
					var = CAN_congress_radsoc
					value < 2
				}
				check_variable = {
					var = CAN_congress_synd
					value < 2
				}
				check_variable = {
					var = CAN_congress_tot
					value < 2
				}
				check_variable = {
					var = CAN_congress_ccf
					value < 2
				}
			}
			check_variable = { CAN_congress_ccf = CAN_congress_tot }
			check_variable = { CAN_congress_ccf = CAN_congress_synd }
			check_variable = { CAN_congress_ccf = CAN_congress_radsoc }
			check_variable = { CAN_congress_radsoc = CAN_congress_synd }
			check_variable = { CAN_congress_radsoc = CAN_congress_tot }
			check_variable = { CAN_congress_synd = CAN_congress_tot }
		}
	}
	
	immediate = {
		hidden_effect = {
			country_event = {
				id = canada_soc.12
				days = 10
			}
			country_event = {
				id = canada_soc.15
				days = 15
			}
		}
	}

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Annie Buller
		name = canada_soc.11.a
		remove_all_ministers = yes
		set_country_flag = CAN_Synd_CPC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Annie Buller"
			picture = "gfx/leaders/CAN/Portrait_Canada_Annie_Buller.png"
			expire = "1.1.1"
			ideology = feminist_syndicalist_subtype
			ideology = feminist_liberalized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_synd_communists_party
			long_name = SCC_synd_communists_party_long
			ideology = syndicalist
		}
	}
	
	option = { #Tom McEwen
		name = canada_soc.11.b
		remove_all_ministers = yes
		set_country_flag = CAN_Synd_CPC_Victory
		mark_focus_tree_layout_dirty = yes
		add_ideas = {
			CAN_Richard_Parmater_Pettipiece_hog_syn
			CAN_Joe_Zuken_for_syn
			CAN_William_Kashtan_eco_syn
			CAN_Norman_Bethune_sec_syn
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		create_country_leader = {
			name = "Tom McEwen"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tom_McEwen.png"
			expire = "1.1.1"
			ideology = centralized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_synd_communists_party
			long_name = SCC_synd_communists_party_long
			ideology = syndicalist
		}
	}
}

# Leader of the Tots

country_event = {
	id = canada_soc.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.12" }
	title = canada_soc.12.t
	desc = canada_soc.12.d
	picture = GFX_report_event_election_vote

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Chuck Crate
		name = canada_soc.7.c
		create_country_leader = {
			name = "Chuck Crate"
			picture = "gfx/leaders/CAN/Portrait_Canada_Chuck_Crate.png"
			expire = "1.1.1"
			ideology = tot_reformed_natsynd_subtype
		}
		set_party_name = {
			name = SCC_maximist_party
			long_name = SCC_maximist_party_long
			ideology = totalist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_CUM_Victory
		}
	}
	
	option = { #William Moriarty
		name = canada_soc.7.b
		create_country_leader = {
			name = "William Moriarty"
			picture = "gfx/leaders/CAN/Portrait_Canada_William_Moriarty.png"
			expire = "1.1.1"
			ideology = lovestoneism_subtype
		}
		set_party_name = {
			name = SCC_lovestone_party
			long_name = SCC_lovestone_party_long
			ideology = totalist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_MEL_Victory
		}
	}
	
	option = { # Tim Buck
		name = canada_soc.7.a
		create_country_leader = {
			name = "Tim Buck"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tim_Buck_kr.png"
			expire = "1.1.1"
			ideology = popcom_subtype
		}
		set_party_name = {
			name = SCC_buck_party
			long_name = SCC_buck_party_long
			ideology = totalist
		}
		set_country_flag = CAN_tots_are_communists
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_CPC_Victory
		}
	}
}

# Leader of the Synds

country_event = {
	id = canada_soc.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.14" }
	title = canada_soc.14.t
	desc = canada_soc.14.d
	picture = GFX_report_event_election_vote

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Roger Ernest Bray
		name = canada_soc.8.a
		create_country_leader = {
			name = "Roger Ernest Bray"
			picture = "gfx/leaders/CAN/Portrait_Canada_Roger_Ernest_Bray.png"
			expire = "1.1.1"
			ideology = centralized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_one_big_union_party
			long_name = SCC_one_big_union_party_long
			ideology = syndicalist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_OBU_Victory
		}
	}
	
	option = { #Robert B. Russell
		name = canada_soc.8.b
		create_country_leader = {
			name = "Robert B. Russell"
			picture = "gfx/leaders/CAN/Portrait_Canada_Robert_B_Russell.png"
			expire = "1.1.1"
			ideology = centralized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_one_big_union_party
			long_name = SCC_one_big_union_party_long
			ideology = syndicalist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_OBU_Victory
		}
	}
	
	option = { #Tom Moore
		name = canada_soc.8.c
		create_country_leader = {
			name = "Tom Moore"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tom_Moore.png"
			expire = "1.1.1"
			ideology = democratic_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_trades_and_labour_congress_party
			long_name = SCC_trades_and_labour_congress_party_long
			ideology = syndicalist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_TLC_Victory
		}
	}
	
	option = { #Arthur Herbert 'Slim' Evans
		name = canada_soc.8.e
		create_country_leader = {
			name = "Arthur Herbert Evans"
			picture = "gfx/leaders/CAN/Portrait_Canada_Arthur_Herbert_Evans.png"
			expire = "1.1.1"
			ideology = liberalized_syndicalism_subtype
		}
		set_party_name = {
			name = SCC_workers_unity_party
			long_name = SCC_workers_unity_party_long
			ideology = syndicalist
		}
		set_country_flag = CAN_wul_leads_synds
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_WUL_Victory
		}
	}
}

# Leader of the RadSocs

country_event = {
	id = canada_soc.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.15" }
	title = canada_soc.15.t
	desc = canada_soc.15.d
	picture = GFX_report_event_election_vote

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Richard Parmater Pettipiece
		name = canada_soc.9.a
		create_country_leader = {
			name = "Richard Parmater Pettipiece"
			picture = "gfx/leaders/CAN/Portrait_Canada_Richard_Pettipiece.png"
			expire = "1.1.1"
			ideology = moderate_socialist_subtype
		}
		set_party_name = {
			name = SCC_socialist_party_of_canada_party
			long_name = SCC_socialist_party_of_canada_party_long
			ideology = radical_socialist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_SPC_Victory
		}
	}
	
	option = { #Jacob Penner
		name = canada_soc.9.b
		create_country_leader = {
			name = "Jacob Penner"
			picture = "gfx/leaders/CAN/Portrait_Canada_Jacob_Penner.png"
			expire = "1.1.1"
			ideology = radsoc_revisionist_marxism_subtype
		}
		set_party_name = {
			name = SCC_social_democratic_party_of_canada_party
			long_name = SCC_social_democratic_party_of_canada_party_long
			ideology = radical_socialist
		}
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_SDP_Victory
		}
	}
	
	option = { #Bill Kardash
		name = canada_soc.9.c
		create_country_leader = {
			name = "Bill Kardash"
			picture = "gfx/leaders/CAN/Portrait_Canada_Bill_Kardash.png"
			expire = "1.1.1"
			ideology = radsoc_communism_subtype
		}
		set_party_name = {
			name = SCC_radsoc_communist_party
			long_name = SCC_radsoc_communist_party_long
			ideology = radical_socialist
		}
		set_country_flag = CAN_radsocs_are_communists
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_RadSoc_CPC_Victory
		}
	}
	
	option = { #James Litterick
		name = canada_soc.9.e
		create_country_leader = {
			name = "James Litterick"
			picture = "gfx/leaders/CAN/Portrait_Canada_James_Litterick.png"
			expire = "1.1.1"
			ideology = radsoc_communism_subtype
		}
		set_party_name = {
			name = SCC_radsoc_communist_party
			long_name = SCC_radsoc_communist_party_long
			ideology = radical_socialist
		}
		set_country_flag = CAN_radsocs_are_communists
		if = {
			limit = { is_subject = yes }
			set_country_flag = CAN_RadSoc_CPC_Victory
		}
	}
}

# Leader of the SocDems

country_event = {
	id = canada_soc.1500
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.1500" }
	title = canada_soc.1500.t
	desc = canada_soc.1500.d
	picture = GFX_report_event_election_vote

	fire_only_once = yes
	is_triggered_only = yes

	option = { #J.S. Woodsworth
		name = canada_soc.10.a
		trigger = {
			date > 1942.3.21
		}
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		
	}
	
	option = { #Major James Coldwell
		name = canada_soc.10.b
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "Major James Coldwell"
			picture = "gfx/leaders/CAN/Portrait_Canada_Major_James_Coldwell.png"
			expire = "1.1.1"
			ideology = socdem_democratic_socialism_subtype
		}
	}
	
	option = { #Tommy Douglas
		name = canada_soc.10.c
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "Tommy Douglas"
			picture = "gfx/leaders/CAN/Portrait_Canada_Tommy_Douglas.png"
			expire = "1.1.1"
			ideology = socdem_democratic_socialism_subtype
		}
	}
	
	option = { #William Irvine
		name = canada_soc.10.e
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "William Irvine"
			picture = "gfx/leaders/CAN/Portrait_Canada_William_Irvine.png"
			expire = "1.1.1"
			ideology = socdem_christian_socialism_subtype
		}
	}
	
	option = { #William Irvine
		name = canada_soc.10.f
		remove_all_ministers = yes
		add_ideas = {
			CAN_Major_James_Coldwell_hog_sde
			CAN_David_Lewis_for_sde
			CAN_Hazen_Argue_eco_sde
			CAN_Stanley_Knowles_sec_sde
		}
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = no
		}
		create_country_leader = {
			name = "Clarence Gillis"
			picture = "gfx/leaders/CAN/Portrait_Canada_Clarence_Gillis.png"
			expire = "1.1.1"
			ideology = socdem_democratic_socialism_subtype
		}
	}
}

### Other ###

country_event = { #RCMP fate
	id = canada_soc.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.16" }
	title = canada_soc.16.t
	desc = canada_soc.16.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Rebrand
		name = canada_soc.16.a
		add_ideas = CAN_mounties_soc_rebrand
	}
	option = { #Transform
		name = canada_soc.16.b
		add_ideas = CAN_mounties_soc_rebuild
	}
	option = { #Secret Police
		name = canada_soc.16.c
		add_stability = -0.04
		increase_ruling_party_popularity_by_2 = yes
		add_ideas = CAN_mounties_soc_secretpolice
	}
}

country_event = { #Anarchist movement
	id = canada_soc.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.17" }
	title = canada_soc.17.t
	desc = canada_soc.17.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Incorporate
		name = canada_soc.17.a
		trigger = {
			NOT = { has_government = totalist }
		}
		add_political_power = 40
		add_stability = -0.02
		increase_ruling_party_popularity_by_2 = yes
	}
	option = { #Ban
		name = canada_soc.17.b
		add_political_power = 60
		add_stability = 0.05
		decrease_ruling_party_popularity_by_2 = yes
	}
}

country_event = { #Broad Front
	id = canada_soc.18
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.18" }
	title = canada_soc.18.t
	desc = canada_soc.18.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Incorporate
		name = canada_soc.18.a
		add_socdem_to_coalition = yes
		if = {
			limit = { has_country_flag = CAN_tots_are_communists }
			add_tot_to_coalition = yes
		}
	}
}

country_event = { #Elections
	id = canada_soc.19
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.19" }
	title = canada_soc.19.t
	desc = canada_soc.19.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Cool
		name = canada_soc.19.a
		add_socdem_to_coalition = yes
	}
}

country_event = { #Union Congress
	id = canada_soc.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.20" }
	title = canada_soc.20.t
	desc = canada_soc.20.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Cool
		name = canada_soc.20.a
		add_popularity = {
			ideology = syndicalist
			popularity = 0.02
		}
	}
}

country_event = { #James Litterick
	id = canada_soc.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.21" }
	title = canada_soc.21.t
	desc = {
		text = canada_soc.21.d
		trigger = {
			NOT = { has_country_leader = { name = "James Litterick" ruling_only = yes } }
		}
	}
	desc = {
		text = canada_soc.21.d_hos
		trigger = {
			has_country_leader = { name = "James Litterick" ruling_only = yes } 
		}
	}
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Look for him
		name = canada_soc.21.a
		random_list = {
			50 = {
				country_event = {
					id = canada_soc.22
					days = 12
				}
			}
			50 = {
				country_event = {
					id = canada_soc.23
					days = 12
				}
			}
		}
	}
	
	option = { #Look for him hard
		name = canada_soc.21.b
		hidden_effect = {
			country_event = {
				id = canada_soc.23
				days = 12
			}
		}
	}
	
	option = { #Don't Look for him
		name = canada_soc.21.c
		hidden_effect = {
			country_event = {
				id = canada_soc.22
				days = 12
			}
		}
	}
}

country_event = { #James Litterick Dead
	id = canada_soc.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.22" }
	title = canada_soc.22.t
	desc = {
		text = canada_soc.22.d
		trigger = {
			NOT = { has_country_leader = { name = "James Litterick" ruling_only = yes } }
		}
	}
	desc = {
		text = canada_soc.22.d_hos
		trigger = {
			has_country_leader = { name = "James Litterick" ruling_only = yes } 
		}
	}
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Cool
		name = canada_soc.22.a
		trigger = {
			NOT = { has_country_leader = { name = "James Litterick" ruling_only = yes } }
		}
		add_stability = -0.02
		add_popularity = {
			ideology = radical_socialist
			popularity = -0.02
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.02
		}
	}
	
	option = { #Kardash shall suceed him
		name = canada_soc.22.c
		trigger = {
			NOT = { has_country_leader = { name = "James Litterick" ruling_only = yes } }
		}
		add_stability = -0.02
		add_popularity = {
			ideology = radical_socialist
			popularity = -0.02
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.02
		}
		create_country_leader = {
			name = "Bill Kardash"
			picture = "gfx/leaders/CAN/Portrait_Canada_Bill_Kardash.png"
			expire = "1.1.1"
			ideology = radsoc_communism_subtype
		}
	}
	
	option = { #Ross shall suceed him
		name = canada_soc.22.b
		trigger = {
			NOT = { has_country_leader = { name = "James Litterick" ruling_only = yes } }
		}
		add_stability = -0.02
		add_popularity = {
			ideology = radical_socialist
			popularity = -0.02
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.02
		}
		create_country_leader = {
			name = "William Cecil Ross"
			picture = "gfx/leaders/CAN/Portrait_Canada_William_Cecil_Ross.png"
			expire = "1.1.1"
			ideology = radsoc_communism_subtype
		}
	}
}

country_event = { #James Litterick Found
	id = canada_soc.23
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.23" }
	title = canada_soc.23.t
	desc = {
		text = canada_soc.23.d
		trigger = {
			NOT = { has_country_leader = { name = "James Litterick" ruling_only = yes } }
		}
	}
	desc = {
		text = canada_soc.23.d_hos
		trigger = {
			has_country_leader = { name = "James Litterick" ruling_only = yes } 
		}
	}
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Cool
		name = canada_soc.23.a
		add_stability = 0.02
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.02
		}
	}
}

country_event = { #Pritchard
	id = canada_soc.24
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.24" }
	title = canada_soc.24.t
	desc = canada_soc.24.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Ally
		name = canada_soc.24.a
		add_stability = 0.04
		increase_ruling_party_popularity_by_2 = yes
	}
	
	option = { #Denounce
		name = canada_soc.24.b
		add_political_power = 30
		increase_ruling_party_popularity_by_2 = yes
	}
	
	option = { #Make Leader
		name = canada_soc.24.c
		if = {
			limit = { has_government = radical_socialist }
			create_country_leader = {
				name = "William Arthur Pritchard"
				picture = "gfx/leaders/CAN/Portrait_Canada_William_Arthur_Pritchard.png"
				expire = "1.1.1"
				ideology = radical_socialist_subtype
			}
		}
		else = {
			create_country_leader = {
				name = "William Arthur Pritchard"
				picture = "gfx/leaders/CAN/Portrait_Canada_William_Arthur_Pritchard.png"
				expire = "1.1.1"
				ideology = centralized_syndicalism_subtype
			}
		}
	}
}

country_event = { #Impossibilism
	id = canada_soc.25
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.24" }
	title = canada_soc.25.t
	desc = canada_soc.25.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #
		name = canada_soc.24.a
		add_political_power = 40
		increase_ruling_party_popularity_by_2 = yes
	}
}

country_event = { #Lovestoneist Unity
	id = canada_soc.26
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.26" }
	title = canada_soc.26.t
	desc = canada_soc.26.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.26.a
		CSA = {
			country_event = canada_soc.27 
		}
	}
	
	option = { #Ally
		name = canada_soc.26.b
		add_stability = 0.05
		add_political_power = 50
	}
}

country_event = { #CSA - Canada Proposes North American Union
	id = canada_soc.27
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.27" }
	title = canada_soc.27.t
	desc = canada_soc.27.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.27.a
		if = {
			limit = { is_ai = no }
			set_cosmetic_tag = CAN_NAU
			every_state = {
				limit = { is_owned_by = SCC }
				CSA = { add_state_core = PREV }
			}
			CSA = {
				annex_country = {
					target = SCC
					transfer_troops = yes
				}
			}
			set_country_flag = CSA_unified_america_buck
		}
		else = {	
			SCC = {
				country_event = canada_soc.29
			}
		}
	}
	
	option = { #Nah
		name = canada_soc.27.b
		SCC = {
			country_event = canada_soc.28
		}
	}
}

country_event = { #CAN - CSA Declines
	id = canada_soc.28
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.28" }
	title = canada_soc.28.t
	desc = canada_soc.28.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Darn
		name = canada_soc.28.a
		add_political_power = -30
		add_stability = -0.03
		add_opinion_modifier = {
			target = CSA
			modifier = CAN_declined_union 
		}
	}
}

country_event = { #CAN - CSA Accepts
	id = canada_soc.29
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.29" }
	title = canada_soc.29.t
	desc = canada_soc.29.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Wonderful
		name = canada_soc.29.a
		set_cosmetic_tag = CAN_NAU
		every_state = {
			limit = { is_owned_by = CSA }
			SCC = { add_state_core = PREV }
		}
		SCC = {
			annex_country = {
				target = CSA
				transfer_troops = yes
			}
		}
		set_country_flag = CAN_unified_america_browder
	}
}

country_event = { #Lovestone isn't in power in America - go after them
	id = canada_soc.30
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.30" }
	title = canada_soc.30.t
	desc = canada_soc.30.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Sounds stupid
		name = canada_soc.30.a
		ai_chance = {
			factor = 100
		}
		add_war_support = 0.05
	}
	
	option = { #Sure why not
		name = canada_soc.30.b
		ai_chance = {
			factor = 0
		}
		create_wargoal = {
			target = var:361.owner
			type = annex_everything
		}
		set_country_flag = CAN_mel_went_after_america
	}
}

country_event = { #Browderist Unity
	id = canada_soc.31
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.31" }
	title = canada_soc.31.t
	desc = canada_soc.31.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.31.a
		CSA = {
			country_event = canada_soc.32 
		}
	}
	
	option = { #Ally
		name = canada_soc.31.b
		add_stability = 0.05
		add_political_power = 50
	}
}

country_event = { #CSA - Canada Proposes North American Union
	id = canada_soc.32
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.32" }
	title = canada_soc.32.t
	desc = canada_soc.32.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.32.a
		if = {
			limit = { is_ai = no }
			set_cosmetic_tag = CAN_NAU
			every_state = {
				limit = { is_owned_by = SCC }
				CSA = { add_state_core = PREV }
			}
			CSA = {
				annex_country = {
					target = SCC
					transfer_troops = yes
				}
			}
			set_country_flag = CSA_unified_america_moriarty
		}
		else = {	
			SCC = {
				country_event = canada_soc.34
			}
		}
	}
	
	option = { #Nah
		name = canada_soc.32.b
		SCC = {
			country_event = canada_soc.33
		}
	}
}

country_event = { #CAN - CSA Declines
	id = canada_soc.33
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.33" }
	title = canada_soc.33.t
	desc = canada_soc.33.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Darn
		name = canada_soc.33.a
		add_political_power = -30
		add_stability = -0.03
		add_opinion_modifier = {
			target = CSA
			modifier = CAN_declined_union 
		}
	}
}

country_event = { #CAN - CSA Accepts
	id = canada_soc.34
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.34" }
	title = canada_soc.34.t
	desc = canada_soc.34.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Wonderful
		name = canada_soc.34.a
		set_cosmetic_tag = CAN_NAU
		every_state = {
			limit = { is_owned_by = CSA }
			SCC = { add_state_core = PREV }
		}
		SCC = {
			annex_country = {
				target = CSA
				transfer_troops = yes
			}
		}
		set_country_flag = CAN_unified_america_Browder
	}
}

country_event = { #Browder isn't in power in America - go after them
	id = canada_soc.35
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.35" }
	title = canada_soc.35.t
	desc = canada_soc.35.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Sounds stupid
		name = canada_soc.35.a
		ai_chance = {
			factor = 100
		}
		add_war_support = 0.05
	}
	
	option = { #Sure why not
		name = canada_soc.35.b
		ai_chance = {
			factor = 0
		}
		create_wargoal = {
			target = var:361.owner
			type = annex_everything
		}
		set_country_flag = CAN_buck_went_after_america
	}
}

country_event = { #AFL Unity
	id = canada_soc.36
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.36" }
	title = canada_soc.36.t
	desc = canada_soc.36.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.36.a
		CSA = {
			country_event = canada_soc.37 
		}
	}
	
	option = { #Ally
		name = canada_soc.36.b
		add_stability = 0.05
		add_political_power = 50
	}
}

country_event = { #CSA - Canada Proposes North American Union
	id = canada_soc.37
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.37" }
	title = canada_soc.37.t
	desc = canada_soc.37.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.37.a
		if = {
			limit = { is_ai = no }
			set_cosmetic_tag = CAN_NAU
			every_state = {
				limit = { is_owned_by = SCC }
				CSA = { add_state_core = PREV }
			}
			CSA = {
				annex_country = {
					target = SCC
					transfer_troops = yes
				}
			}
			set_country_flag = CSA_unified_america_TLC
		}
		else = {	
			SCC = {
				country_event = canada_soc.39
			}
		}
	}
	
	option = { #Nah
		name = canada_soc.37.b
		SCC = {
			country_event = canada_soc.38
		}
	}
}

country_event = { #CAN - CSA Declines
	id = canada_soc.38
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.38" }
	title = canada_soc.38.t
	desc = canada_soc.38.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Darn
		name = canada_soc.38.a
		add_political_power = -30
		add_stability = -0.03
		add_opinion_modifier = {
			target = CSA
			modifier = CAN_declined_union 
		}
	}
}

country_event = { #CAN - CSA Accepts
	id = canada_soc.39
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.39" }
	title = canada_soc.39.t
	desc = canada_soc.39.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Wonderful
		name = canada_soc.39.a
		set_cosmetic_tag = CAN_NAU
		every_state = {
			limit = { is_owned_by = CSA }
			SCC = { add_state_core = PREV }
		}
		SCC = {
			annex_country = {
				target = CSA
				transfer_troops = yes
			}
		}
		set_country_flag = CAN_unified_america_AFL
	}
}

country_event = { #AFL isn't in power in America - go after them
	id = canada_soc.40
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.40" }
	title = canada_soc.40.t
	desc = canada_soc.40.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Sounds stupid
		name = canada_soc.40.a
		ai_chance = {
			factor = 100
		}
		add_war_support = 0.05
	}
	
	option = { #Sure why not
		name = canada_soc.40.b
		ai_chance = {
			factor = 0
		}
		create_wargoal = {
			target = var:361.owner
			type = annex_everything
		}
		set_country_flag = CAN_tlc_went_after_america
	}
}

country_event = { #IWW Unity
	id = canada_soc.41
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.41" }
	title = canada_soc.41.t
	desc = canada_soc.41.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.41.a
		CSA = {
			country_event = canada_soc.42 
		}
	}
	
	option = { #Ally
		name = canada_soc.41.b
		add_stability = 0.05
		add_political_power = 50
	}
}

country_event = { #CSA - Canada Proposes North American Union
	id = canada_soc.42
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.42" }
	title = canada_soc.42.t
	desc = canada_soc.42.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.42.a
		if = {
			limit = { is_ai = no }
			set_cosmetic_tag = CAN_NAU
			every_state = {
				limit = { is_owned_by = SCC }
				CSA = { add_state_core = PREV }
			}
			CSA = {
				annex_country = {
					target = SCC
					transfer_troops = yes
				}
			}
			set_country_flag = CSA_unified_america_obu
		}
		else = {	
			SCC = {
				country_event = canada_soc.44
			}
		}
	}
	
	option = { #Nah
		name = canada_soc.42.b
		SCC = {
			country_event = canada_soc.43
		}
	}
}

country_event = { #CAN - CSA Declines
	id = canada_soc.43
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.43" }
	title = canada_soc.43.t
	desc = canada_soc.43.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Darn
		name = canada_soc.43.a
		add_political_power = -30
		add_stability = -0.03
		add_opinion_modifier = {
			target = CSA
			modifier = CAN_declined_union 
		}
	}
}

country_event = { #CAN - CSA Accepts
	id = canada_soc.44
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.44" }
	title = canada_soc.44.t
	desc = canada_soc.44.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Wonderful
		name = canada_soc.44.a
		set_cosmetic_tag = CAN_NAU
		every_state = {
			limit = { is_owned_by = CSA }
			SCC = { add_state_core = PREV }
		}
		SCC = {
			annex_country = {
				target = CSA
				transfer_troops = yes
			}
		}
		set_country_flag = CAN_unified_america_iww
	}
}

country_event = { #IWW isn't in power in America - go after them
	id = canada_soc.45
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.45" }
	title = canada_soc.45.t
	desc = canada_soc.45.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Sounds stupid
		name = canada_soc.45.a
		ai_chance = {
			factor = 100
		}
		add_war_support = 0.05
	}
	
	option = { #Sure why not
		name = canada_soc.45.b
		ai_chance = {
			factor = 0
		}
		create_wargoal = {
			target = var:361.owner
			type = annex_everything
		}
		set_country_flag = CAN_obu_went_after_america
	}
}

country_event = { #TUUL Unity
	id = canada_soc.46
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.46" }
	title = canada_soc.46.t
	desc = canada_soc.46.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.46.a
		CSA = {
			country_event = canada_soc.47 
		}
	}
	
	option = { #Ally
		name = canada_soc.46.b
		add_stability = 0.05
		add_political_power = 50
	}
}

country_event = { #CSA - Canada Proposes North American Union
	id = canada_soc.47
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.47" }
	title = canada_soc.47.t
	desc = canada_soc.47.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Unify
		name = canada_soc.47.a
		if = {
			limit = { is_ai = no }
			set_cosmetic_tag = CAN_NAU
			every_state = {
				limit = { is_owned_by = SCC }
				CSA = { add_state_core = PREV }
			}
			CSA = {
				annex_country = {
					target = SCC
					transfer_troops = yes
				}
			}
			set_country_flag = CSA_unified_america_wul
		}
		else = {	
			SCC = {
				country_event = canada_soc.49
			}
		}
	}
	
	option = { #Nah
		name = canada_soc.47.b
		SCC = {
			country_event = canada_soc.48
		}
	}
}

country_event = { #CAN - CSA Declines
	id = canada_soc.48
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.48" }
	title = canada_soc.48.t
	desc = canada_soc.48.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Darn
		name = canada_soc.48.a
		add_political_power = -30
		add_stability = -0.03
		add_opinion_modifier = {
			target = CSA
			modifier = CAN_declined_union 
		}
	}
}

country_event = { #CAN - CSA Accepts
	id = canada_soc.49
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.49" }
	title = canada_soc.49.t
	desc = canada_soc.49.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Wonderful
		name = canada_soc.49.a
		set_cosmetic_tag = CAN_NAU
		every_state = {
			limit = { is_owned_by = CSA }
			SCC = { add_state_core = PREV }
		}
		SCC = {
			annex_country = {
				target = CSA
				transfer_troops = yes
			}
		}
		set_country_flag = CAN_unified_america_tuul
	}
}

country_event = { #TUUL isn't in power in America - go after them
	id = canada_soc.50
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc.50" }
	title = canada_soc.50.t
	desc = canada_soc.50.d
	picture = GFX_report_event_CAN_rcmp2

	fire_only_once = yes
	is_triggered_only = yes

	option = { #Sounds stupid
		name = canada_soc.50.a
		ai_chance = {
			factor = 100
		}
		add_war_support = 0.05
	}
	
	option = { #Sure why not
		name = canada_soc.50.b
		ai_chance = {
			factor = 0
		}
		create_wargoal = {
			target = var:361.owner
			type = annex_everything
		}
		set_country_flag = CAN_tuul_went_after_america
	}
}

### Elections ###

### Diplo Events ###

add_namespace = canada_soc_diplo

country_event = { #invite to faction
	id = canada_soc_diplo.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.1" }
	title = canada_soc_diplo.1.t
	desc = {
		text = canada_soc_diplo.1.d
		trigger = {
			NOT = {
				OR = {
					tag = AST
					tag = NZL
					tag = ENG
				}
			}
		}
	}
	desc = {
		text = canada_soc_diplo.1.d_2
		trigger = {
			OR = {
				tag = AST
				tag = NZL
				tag = ENG
			}
		}
	}
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.1.a #
		ai_chance = {
			factor = 80
		}
		if = {
			limit = {
				is_in_faction = yes
			}
			leave_faction = yes
		}
		FROM = {
			add_to_faction = ROOT
			country_event = canada_soc_diplo.2
		}
	}

	option = {
		name = canada_soc_diplo.1.b
		ai_chance = {
			factor = 20
		}
		FROM = {
			country_event = canada_soc_diplo.3
		}
		
	}
}

country_event = { #they joined
	id = canada_soc_diplo.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.2" }
	title = canada_soc_diplo.2.t
	desc = canada_soc_diplo.2.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.2.a
	}
}

country_event = { #they didn't join
	id = canada_soc_diplo.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.3" }
	title = canada_soc_diplo.3.t
	desc = canada_soc_diplo.3.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.3.a
	}
}

country_event = { #Canada wants to join the Internationale
	id = canada_soc_diplo.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.4" }
	title = canada_soc_diplo.4.t
	desc = canada_soc_diplo.4.d
	
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.4.a #
		ai_chance = {
			factor = 80
		}
		FROM = {
			add_to_faction = ROOT
			country_event = canada_soc_diplo.5
		}
	}

	option = {
		name = canada_soc_diplo.4.b
		ai_chance = {
			factor = 20
		}
		FROM = {
			country_event = canada_soc_diplo.6
		}
		
	}
}

country_event = { #We joined
	id = canada_soc_diplo.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.5" }
	title = canada_soc_diplo.5.t
	desc = canada_soc_diplo.5.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.5.a
	}
}

country_event = { #We didn't join
	id = canada_soc_diplo.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.6" }
	title = canada_soc_diplo.6.t
	desc = canada_soc_diplo.6.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.6.a
		set_country_flag = CAN_internationale_rejection
		uncomplete_national_focus = {
			focus = CAN_Join_the_Fray
			uncomplete_children = yes
		}
	}
}

country_event = { #Canada wants to create CSA alliance
	id = canada_soc_diplo.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.7" }
	title = canada_soc_diplo.7.t
	desc = canada_soc_diplo.7.d
	
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.7.a #
		ai_chance = {
			factor = 80
		}
		if = {
			limit = { is_ai = no }
			create_faction = "North American Treaty Organization"
		}
		FROM = {
			country_event = canada_soc_diplo.8
		}
	}

	option = {
		name = canada_soc_diplo.7.b
		ai_chance = {
			factor = 20
		}
		FROM = {
			country_event = canada_soc_diplo.9
		}
		
	}
}

country_event = { #We joined
	id = canada_soc_diplo.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.8" }
	title = canada_soc_diplo.8.t
	desc = canada_soc_diplo.8.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.8.a
		if = {
			limit = { is_ai = no }
			create_faction = "North American Treaty Organization"
			add_to_faction = CSA
		}
		else = {
			CSA = {
				add_to_faction = ROOT 
			}
		}
	}
}

country_event = { #We didn't join
	id = canada_soc_diplo.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event canada_soc_diplo.9" }
	title = canada_soc_diplo.9.t
	desc = canada_soc_diplo.9.d
	picture = GFX_report_event_generic_diplomacy1
	is_triggered_only = yes

	option = {
		name = canada_soc_diplo.9.a
		set_country_flag = CAN_csa_rejection
		uncomplete_national_focus = {
			focus = CAN_Alliance_with_America
			uncomplete_children = yes
		}
	}
}

### Anglosphere ###

add_namespace = scc_anglosphere

# Invitation to the Federation

country_event = {
	id = scc_anglosphere.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.1" }
	title = scc_anglosphere.1.t
	desc = scc_anglosphere.1.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #yes
		name = scc_anglosphere.1.a
		clr_country_flag = CAN_inviting_to_anglosphere
		ai_chance = {
			factor = 50
			modifier = {
				factor = 30
				has_country_flag = CAN_more_likely_to_anglosphere
			}
		}
		SCC = {
			country_event = { #Accepted
				id = scc_anglosphere.2
				days = 1
			}
		}
	}
	
	option = { #no
		name = scc_anglosphere.1.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = -30
				has_country_flag = CAN_more_likely_to_anglosphere
			}
		}
		trigger = {
			NOT = {
				is_subject_of = SCC
			}
		}
		SCC = { #Denied
			country_event = {
				id = scc_anglosphere.3
				days = 1
			}
		}
	}
}


# Invitation Accepted

country_event = {
	id = scc_anglosphere.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.2" }
	title = scc_anglosphere.2.t
	desc = scc_anglosphere.2.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #Wonderful!
		name = scc_anglosphere.2.a
		FROM = {
			set_country_flag = SCC_accepted_fed_proposal
		}
	}
}

# Invitation Denied

country_event = {
	id = scc_anglosphere.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.3" }
	title = scc_anglosphere.3.t
	desc = scc_anglosphere.3.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #Death to Them
		name = scc_anglosphere.3.a
		effect_tooltip = {
			create_wargoal = {
				type = annex_everything
				target = FROM
			}
		}
		FROM = {
			country_event = {
				id = scc_anglosphere.4
				days = 4
			}
		}
	}
	
	option = { #It was fun while it lasted
		name = scc_anglosphere.3.b
		add_stability = -0.02
		add_political_power = -20
		clr_country_flag = CAN_inviting_to_anglosphere
	}
}

# Canada is coming to kill us

country_event = {
	id = scc_anglosphere.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.4" }
	title = scc_anglosphere.4.t
	desc = scc_anglosphere.4.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #Throw off the Entente's Chains!
		name = scc_anglosphere.4.a
		ai_chance = {
			factor = 50
		}
		leave_faction = yes
		separate_peace_all_wars = yes
		SCC = {
			create_wargoal = {
				type = annex_everything
				target = ROOT
			}
		}
		FROM = {
			country_event = {
				id = scc_anglosphere.5
				days = 4
			}
		}
		clr_country_flag = CAN_inviting_to_anglosphere
	}
	
	option = { #We have Reconsidered
		name = scc_anglosphere.4.b
		ai_chance = {
			factor = 50
		}
		SCC = {
			country_event = { #Accepted
				id = scc_anglosphere.2
				days = 1
			}
			change_tag_from = ROOT
		}
		clr_country_flag = CAN_inviting_to_anglosphere
	}
}

# Nope to the Nope

country_event = {
	id = scc_anglosphere.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.5" }
	title = scc_anglosphere.5.t
	desc = scc_anglosphere.5.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #Well Fuck them
		name = scc_anglosphere.5.a
		
	}
}

country_event = { #Join the Fed?
	id = scc_anglosphere.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.6" }
	title = scc_anglosphere.6.t
	desc = scc_anglosphere.6.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #Wonderful!
		name = scc_anglosphere.6.a
		ai_chance = {
			factor = 80
		}
		SCC = {
			country_event = scc_anglosphere.8
			change_tag_from = ROOT
		}
	}
	
	option = { #We've changed our mind...
		name = scc_anglosphere.6.b
		ai_chance = {
			factor = 20
		}
		trigger = {
			NOT = {
				is_subject_of = FROM
			}
		}
		SCC = {
			country_event = scc_anglosphere.7
		}
		leave_faction = yes
		separate_peace_all_wars = yes
	}
}

country_event = { #They Pussy Out
	id = scc_anglosphere.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.7" }
	title = scc_anglosphere.7.t
	desc = scc_anglosphere.7.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #The Fuck you Are
		name = scc_anglosphere.7.a
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
	}
}

country_event = { #They Accept
	id = scc_anglosphere.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event scc_anglosphere.8" }
	title = scc_anglosphere.8.t
	desc = scc_anglosphere.8.d
	picture = GFX_report_event_CAN_empire_map

	is_triggered_only = yes

	option = { #Cool
		name = scc_anglosphere.8.a
		every_state = {
			limit = {
				is_core_of = FROM
			}
			SCC = {
				add_state_core = PREV
			}
		}
		SCC = {
			annex_country = {
				target = FROM
				transfer_troops = yes
			}
		}
		FROM = {
			every_unit_leader = {
				set_nationality = ROOT
			}
		}
	}
}